"R est mon boy"
paste("R est mon ami", "Mon ami très très intime")
knitr::opts_chunk$set(echo = FALSE)
summary(cars)
plot(pressure)
install.packages("knitr")
install.packages("magrittr")
install.packages("data.table")
install.packages("ggplot2")
install.packages("devtools")
dataset = iris
head(dataset)
library(timeSeries)
library(astsa)
# Showing the predictable behavior of some series.
# See Section 3.1.1 of the Lecture Notes.
set.seed(10)
x <- seq(0, 10, length=100)
lin.t <- x + rnorm(100)
qua.t <- x^2 + rnorm(100)
par(mfrow=c(2,2))
plot(lin.t); plot(diff(lin.t, 1))
plot(qua.t); plot(diff(diff(qua.t, 1), 1))
par(mfrow=c(2,1))
# Note that taking lag-1 differences of a series with a quadratic
# trend leads to a series with a linear trend.
plot(diff(qua.t,1))
# Taking lag-2 differences of a quadratic series also
# leads to a series with a linear trend.
plot(diff(qua.t,2))
par(mfrow=c(1,1))
# Note that taking lag-1 differences of a series with a quadratic
# trend leads to a series with a linear trend.
plot(diff(qua.t,1))
# Taking lag-2 differences of a quadratic series also
# leads to a series with a linear trend.
plot(diff(qua.t,2))
# Taking lag-2 differences of a quadratic series also
# leads to a series with a linear trend.
plot(diff(qua.t,4))
# Taking lag-2 differences of a quadratic series also
# leads to a series with a linear trend.
plot(diff(qua.t,10))
plot(qua.t); plot(diff(diff(diff(qua.t, 1), 1)))
par(mfrow=c(2,1))
plot(qua.t); plot(diff(diff(diff(qua.t, 1), 1)))
plot(qua.t); plot(diff(diff(qua.t, 1), 1))
plot(diff(diff(diff(qua.t, 1), 1)))
plot(diff(diff(qua.t, 1), 1))
install.packages("astsa")
library(astsa)
n <- 1000
x <- ts(rnorm(n),1,n)
par(mfrow=c(2,1))
acf(x,lag.max=50)
pacf(x,lag.max=50,main="")
acf2(x,max.lag=50,main=paste("White noise - Series"))
y <- z <- 3+5
y <- z +1 <- 3+5
setwd("C:/Users/dmari_000/Desktop/Maitrise/Hiver 2020/Methodes de previsions/Projet/Donnees")
# function to read and aggregate data over all years
# Note that hour 24 of day t is recorded as hour 00 of day t+1
# E.g. 2002-05-01-24 becomes 2002-05-02 00:00:00
read.data <- function(years, path="_WCMASS_") {
day <- character(); hour <- Ontario <- numeric()
for (year in years) {
dem <- read.csv(paste(year, path, ".csv", sep=""),
col.names=c("Date","Hour","Market","Ontario"),
colClasses=c("character",rep("integer",3)), skip=3)
day  <- c(day,dem$Date)
hour <- c(hour,dem$Hour)
Ontario <- c(Ontario,dem$Ontario)
}
myday  <- paste(day, hour, sep="-")
Ont <- timeSeries(Ontario, myday, format="%Y-%m-%d-%H")
return(Ont)
}
# Read the data for 2011-2019
WCMASS <- read.data(2011:2019)
# function to read and aggregate data over all years
# Note that hour 24 of day t is recorded as hour 00 of day t+1
# E.g. 2002-05-01-24 becomes 2002-05-02 00:00:00
read.data <- function(years, path="_WCMASS") {
day <- character(); hour <- Ontario <- numeric()
for (year in years) {
dem <- read.csv(paste(year, path, ".csv", sep=""),
col.names=c("Date","Hour","Market","Ontario"),
colClasses=c("character",rep("integer",3)), skip=3)
day  <- c(day,dem$Date)
hour <- c(hour,dem$Hour)
Ontario <- c(Ontario,dem$Ontario)
}
myday  <- paste(day, hour, sep="-")
Ont <- timeSeries(Ontario, myday, format="%Y-%m-%d-%H")
return(Ont)
}
# Read the data for 2011-2019
WCMASS <- read.data(2011:2019)
data2019 <- read.csv("2019_WCMASS.csv")
head(data2019)
data2011 <- read.csv("2011_WCMASS.csv")
head(data2011)
tail(data2019)
tail(data2011)
tail(data2019,24)
head(data2019,24)
dim(data2019)
T = strptime(data2019$Date[1:48], format = "%d-%m-%Y")
T = as.Date(data2019$Date[1:48], format = "%d-%m-%Y")
T
data2019$Date[1:48]
T = as.Date(data2019$Date[1:48], format = "%d-%B-%y")
T
T = as.Date(data2019$Date[1:48], format = "%d-%b-%y")
T
as.Date(data2019$Date[1:48], format = "%d-%b-%y")
T = as.charactere(as.Date(data2019$Date[1:48], format = "%d-%b-%y"))
T = as.character(as.Date(data2019$Date[1:48], format = "%d-%b-%y"))
T
T = as.Date(as.character(data2019$Date[1:48]), format = "%d-%b-%y")
T
data2019$Date[1:48]
as.character(data2019$Date[1:48])
as.Date(as.character(data2019$Date[1:48]), format = "%d-%b-%y")
T = as.Date(as.character(data2019$Date[1:48]), format = "%d-%b-%y"))
Sys.setlocale("LC_TIME", "C")
T = as.Date(as.character(data2019$Date[1:48]), format = "%d-%b-%y")
T
T = as.Date(as.character(data2011$Date[1:48]), format = "%d-%b-%y")
T
T = as.Date(as.character(data2011$Date[1:48]), format = "%d-%b-%y")
data2011$Date[1:48]
as.Date(as.character(data2011$Date[1:48]), format = "%m/%4/%Y")
as.Date(as.character(data2011$Date[1:48]), format = "%m/%d/%Y")
m = data.frame()
head(data2019)
data2019$Date = as.Date(as.character(data2019$Date), format = "%d-%b-%y")
head(data2019)
k=data2019[data2019$RT_Demand == max(data2019$RT_Demand) & data2019$Date == 2019-01-01,]
str(data2019)
data2019$DA_Demand = as.numeric(data2019$DA_Demand)
data2019$RT_Demand = as.numeric(data2019$RT_Demand)
k=data2019[data2019$RT_Demand == max(data2019$RT_Demand) & data2019$Date == 2019-01-01,]
k=data2019[data2019$RT_Demand == max(data2019$RT_Demand) & data2019$Date == "2019-01-01",]
str(data2019)
head(data2019$RT_Demand)
data2019 <- read.csv("2019_WCMASS.csv")
str(data2019)
str(data2011)
# Read the data for 2011-2019
WCMASS <- read.data(2011:2019)
data2019 <- read.csv("2019_WCMASS.csv")
data2019$DA_Demand = as.numeric(levels(data2019$DA_Demand))[data2019$DA_Demand]
data2019$RT_Demand = as.numeric(paste(data2019$RT_Demand))
str(data2019)
data2019 <- read.csv("2019_WCMASS.csv")
str(data2019)
data2019$RT_Demand = as.numeric(paste(data2019$RT_Demand))
str(data2019)
data2019 <- read.csv("2019_WCMASS.csv")
data2019$Date = as.Date(as.character(data2019$Date), format = "%d-%b-%y")
data2019$DA_Demand = as.numeric(data2019$DA_Demand)
data2019$RT_Demand = as.numeric(data2019$RT_Demand)
k=data2019[data2019$RT_Demand == max(data2019$RT_Demand) & data2019$Date == "2019-01-01",]
head(data2019$Date)
max(data2019$RT_Demand)
max(data2019$RT_Demand[data2019$Date == "2019-01-01"])
k=data2019[data2019$RT_Demand == max(data2019$RT_Demand[data2019$Date == "2019-01-01"]),]
read.data <- function(years, path="_WCMASS") {
date <- character(); hour <- demand <- numeric(); tempo1 <- tempo2 <- data.frame();
for (year in years) {
dem <- read.csv(paste(year, path, ".csv", sep=""),
col.names=c("Date", "Hr_End", "DA_Demand", "RT_Demand",
"DA_LMP", "DA_EC", "DA_CC", "DA_MLC",
"RT_LMP", "RT_EC", "RT_CC", "RT_MLC",
"Dry_Bulb", "Dew_Point"),
colClasses=c("character","integer",rep("numeric",12)))
if (year < 2016) {
date   = c(date, as.Date(as.character(dem$Date), format = "%m/%d/%Y"))
demand = c(demand, dem$RT_Demand)
}else {
date   = c(date, as.Date(as.character(dem$Date), format = "%d-%b-%y"))
demand = c(demand, as.numeric(gsub(",","",dem$RT_Demand)))
}
hour   <- c(hour,dem$Hr_End)
}
day       <- paste(date, hour, sep="-")
wcmass.data <- timeSeries(demand, day, format="%Y-%m-%d-%H")
return(wcmass.data)
}
# Read the data for 2011-2019
data.demande <- read.data(2011:2019)
library(timeSeries)
read.data <- function(years, path="_WCMASS") {
date <- character(); hour <- demand <- numeric();
for (year in years) {
dem <- read.csv(paste(year, path, ".csv", sep=""),
col.names=c("Date", "Hr_End", "DA_Demand", "RT_Demand",
"DA_LMP", "DA_EC", "DA_CC", "DA_MLC",
"RT_LMP", "RT_EC", "RT_CC", "RT_MLC",
"Dry_Bulb", "Dew_Point"),
colClasses=c("character","integer",rep("numeric",12)))
if (year < 2016) {
date   = c(date, as.Date(as.character(dem$Date), format = "%m/%d/%Y"))
demand = c(demand, dem$RT_Demand)
}else {
date   = c(date, as.Date(as.character(dem$Date), format = "%d-%b-%y"))
demand = c(demand, as.numeric(gsub(",","",dem$RT_Demand)))
}
hour   <- c(hour,dem$Hr_End)
}
day       <- paste(date, hour, sep="-")
wcmass.data <- timeSeries(demand, day, format="%Y-%m-%d-%H")
return(wcmass.data)
}
# Read the data for 2011-2019
data.demande <- read.data(2011:2019)
# Read the data for 2011-2019
data.demande <- read.data(2011:2019)
read.data <- function(years, path="_WCMASS") {
date <- as.character(); hour <- demand <- as.numeric();
for (year in years) {
dem <- read.csv(paste(year, path, ".csv", sep=""))
if (year < 2016) {
date   = c(date, as.Date(as.character(dem$Date), format = "%m/%d/%Y"))
demand = c(demand, dem$RT_Demand)
}else {
date   = c(date, as.Date(as.character(dem$Date), format = "%d-%b-%y"))
demand = c(demand, as.numeric(gsub(",","",dem$RT_Demand)))
}
hour   <- c(hour,dem$Hr_End)
}
day       <- paste(date, hour, sep="-")
wcmass.data <- timeSeries(demand, day, format="%Y-%m-%d-%H")
return(wcmass.data)
}
# Read the data for 2011-2019
data.demande <- read.data(2011:2019)
read.data <- function(years, path="_WCMASS") {
date <- as.character(); hour <- demand <- as.numeric();
for (year in years) {
dem <- read.csv(paste(year, path, ".csv", sep=""))
if (year < 2016) {
date   = c(date, as.Date(as.character(dem$Date), format = "%m/%d/%Y"))
demand = c(demand, dem$RT_Demand)
}else {
date   = c(date, as.Date(as.character(dem$Date), format = "%d-%b-%y"))
demand = c(demand, as.numeric(gsub(",","",dem$RT_Demand)))
}
hour   <- c(hour,dem$Hr_End)
}
day       <- paste(date, hour, sep="-")
wcmass.data <- timeSeries(demand, charvec=day, format="%Y-%m-%d-%H")
return(wcmass.data)
}
# Read the data for 2011-2019
data.demande <- read.data(2011:2019)
read.data <- function(years, path="_WCMASS") {
date <- as.character(); hour <- demand <- as.numeric();
for (year in years) {
dem <- read.csv(paste(year, path, ".csv", sep=""))
if (year < 2016) {
date   = c(date, as.Date(as.character(dem$Date), format = "%m/%d/%Y"))
demand = c(demand, dem$RT_Demand)
}else {
date   = c(date, as.Date(as.character(dem$Date), format = "%d-%b-%y"))
demand = c(demand, as.numeric(gsub(",","",dem$RT_Demand)))
}
hour   <- c(hour,dem$Hr_End)
}
day         <- paste(date, hour, sep="-")
wcmass.data <- timeSeries(data=demand, charvec=day, format="%Y-%m-%d-%H")
return(wcmass.data)
}
# Read the data for 2011-2019
data.demande <- read.data(2011:2019)
read.data <- function(years, path="_WCMASS") {
date <- as.character(); hour <- demand <- as.numeric()
for (year in years) {
dem <- read.csv(paste(year, path, ".csv", sep=""))
if (year < 2016) {
date   = c(date, as.character(as.Date(dem$Date), format = "%m/%d/%Y"))
demand = c(demand, dem$RT_Demand)
}else {
date   = c(date, as.character(as.Date(dem$Date), format = "%d-%b-%y"))
demand = c(demand, as.numeric(gsub(",","",dem$RT_Demand)))
}
hour   <- c(hour,dem$Hr_End)
}
day         <- paste(date, hour, sep="-")
wcmass.data <- timeSeries(data=demand, charvec=day, format="%Y-%m-%d-%H")
return(wcmass.data)
}
# Read the data for 2011-2019
data.demande <- read.data(2011:2019)
read.data <- function(years, path="_WCMASS") {
day <- as.character(); hour <- demand <- as.numeric()
for (year in years) {
dem <- read.csv(paste(year, path, ".csv", sep=""))
if (year < 2016) {
day   = c(day, as.character(as.Date(dem$Date), format = "%m/%d/%Y"))
demand = c(demand, dem$RT_Demand)
}else {
day   = c(day, as.character(as.Date(dem$Date), format = "%d-%b-%y"))
demand = c(demand, as.numeric(gsub(",","",dem$RT_Demand)))
}
hour   <- c(hour,dem$Hr_End)
}
myday         <- paste(day, hour, sep="-")
wcmass.data <- timeSeries(data=demand, charvec=myday, format="%Y-%m-%d-%H")
return(wcmass.data)
}
# Read the data for 2011-2019
data.demande <- read.data(2011:2019)
read.data <- function(years, path="_WCMASS") {
day <- as.character(); hour <- demand <- as.numeric()
for (year in years) {
dem <- read.csv(paste(year, path, ".csv", sep=""))
if (year < 2016) {
day   = c(day,as.Date(as.character(dem$Date), format = "%m/%d/%Y"))
demand = c(demand, dem$RT_Demand)
}else {
day   = c(day, as.Date(as.character(dem$Date), format = "%d-%b-%y"))
demand = c(demand, as.numeric(gsub(",","",dem$RT_Demand)))
}
hour   <- c(hour,dem$Hr_End)
}
myday         <- paste(day, hour, sep="-")
wcmass.data <- timeSeries(data=demand, charvec=myday, format="%Y-%m-%d-%H")
return(wcmass.data)
}
# Read the data for 2011-2019
data.demande <- read.data(2011:2019)
hour   <- c(hour,dem[,2])
read.data <- function(years, path="_WCMASS") {
day <- as.character(); hour <- demand <- as.numeric()
for (year in years) {
dem <- read.csv(paste(year, path, ".csv", sep=""))
if (year < 2016) {
day   = c(day,as.Date(as.character(dem[,1]), format = "%m/%d/%Y"))
demand = c(demand, dem[,4])
}else {
day   = c(day, as.Date(as.character(dem[,1]), format = "%d-%b-%y"))
demand = c(demand, as.numeric(gsub(",","",dem[,4])))
}
hour   <- c(hour,dem[,2])
}
myday         <- paste(day, hour, sep="-")
wcmass.data <- timeSeries(data=demand, charvec=myday, format="%Y-%m-%d-%H")
return(wcmass.data)
}
# Read the data for 2011-2019
data.demande <- read.data(2011:2019)
read.data <- function(years) {
day <- as.character(); hour <- demand <- as.numeric()
for (year in years) {
dem <- read.csv(paste(year, "_WCMASS.csv", sep=""))
if (year < 2016) {
day   = c(day,as.Date(as.character(dem[,1]), format = "%m/%d/%Y"))
demand = c(demand, dem[,4])
}else {
day   = c(day, as.Date(as.character(dem[,1]), format = "%d-%b-%y"))
demand = c(demand, as.numeric(gsub(",","",dem[,4])))
}
hour   <- c(hour,dem[,2])
}
myday         <- paste(day, hour, sep="-")
wcmass.data <- timeSeries(data=demand, charvec=myday, format="%Y-%m-%d-%H")
return(wcmass.data)
}
# Read the data for 2011-2019
data.demande <- read.data(2011:2019)
tab= read.csv("https://raw.githubusercontent.com/csdschec/education/master/R/Dataset/led.csv")
data <- read.csv("https://raw.githubusercontent.com/csdschec/education/master/R/Dataset/led.csv")
setwd("~/GitHub/education/R/Dataset")
data1 <- read.csv("led.csv")
dim(data)
attach(data)
# Year as numeric
plot(Lifeexpectancy~Year, xlab="Year", ylab="Lifeexpectancy")
# Year as factor
boxplot(Lifeexpectancy~Year, xlab="Year", ylab="Lifeexpectancy")
par(mfrow=c(2,1))
# Year as numeric
plot(Lifeexpectancy~Year, xlab="Year", ylab="Lifeexpectancy")
# Year as factor
boxplot(Lifeexpectancy~Year, xlab="Year", ylab="Lifeexpectancy")
par(mfrow=c(1,2))
# Year as numeric
plot(Lifeexpectancy~Year, xlab="Year", ylab="Lifeexpectancy")
# Year as factor
boxplot(Lifeexpectancy~Year, xlab="Year", ylab="Lifeexpectancy")
sample?
?sample
help(sample)
